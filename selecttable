#!/usr/bin/bash

while true; do

echo "Available tables:"
found_tables=false

for table in *; do
    if [ -f "$table" ]; then
        echo "- $table"
        found_tables=true
    fi
done

if [ "$found_tables" = false ]; then
    echo "
No tables available to select."
    echo "Returning to Menu...
"
    sleep 1.5
    break
fi
    read -p "
Enter the table name to select from (enter 'exit' to quit): " insert_table_name

if [ "$insert_table_name" == "exit" ]; then
        echo "
Exiting the script...
"
	sleep 1.5
        break
    fi

    if [ ! -e "$insert_table_name" ]; then
        echo "Table $insert_table_name does not exist. Please enter a valid table name.
"
        continue
    fi

    IFS='|' read -r -a column_names < <(head -n 1 "$insert_table_name")
    IFS='|' read -r -a column_keys < <(head -n 2 "$insert_table_name" | tail -n 1)
    IFS='|' read -r -a column_types < <(head -n 3 "$insert_table_name" | tail -n 1)

    select_all() {
    echo "Executing: SELECT * FROM $insert_table_name;"

    echo "Columns: ${column_names[@]}"

    awk -F'|' '
        BEGIN {
            print "\nProcessing file\n"
        }

        NR == 1 {
            # Print the first row with column names
            print "Columns:", $0
        }

        NR > 3 {
            # Main block, executed for each line after the third row
            print "Values :", $0
        }

        END {
            print "\nProcessing complete."
        }
    ' "$insert_table_name"
}

select_by_primary_key() {
    primary_key_column_index=$(awk -F'|' 'NR==2 {for (i=1; i<=NF; i++) if ($i == "y") print i}' "$insert_table_name")

    if [ -z "$primary_key_column_index" ]; then
        echo "\nNo primary key column found in the table."
        return
    fi

    read -p "\nEnter the primary key value: " primary_key
    echo "\nExecuting: SELECT * FROM $insert_table_name WHERE ${column_names[$((primary_key_column_index-1))]} = $primary_key;"

    echo "Columns: ${column_names[@]}"

    awk -F'|' -v val="$primary_key" -v key_col="$primary_key_column_index" -v OFS=' | ' '
        BEGIN {
            print "\nProcessing file\n"
        }

        NR == 1 {
            # Print the first row with column names
            print "Columns:", $0
        }

        {
            # Main block, executed for each line
            if ($key_col == val) {
                print "Values :", $0
                matched=1
            }
        }

        END {
            if (matched != 1) {
                print "No match found."
            }
            print "\nProcessing complete."
        }
    ' matched=0 "$insert_table_name"
}



select_by_column() {

    read -p "
Enter the column names (comma-separated): " column_names_input


    IFS=',' read -r -a selected_columns <<< "$column_names_input"

for col in "${selected_columns[@]}"; do
    if ! awk -v col="$col" 'NR==1 {gsub(/\|/, " "); for (i=1; i<=NF; i++) if ($i == col) exit 0; exit 1}' "$insert_table_name"; then
        echo "
Column '$col' does not exist. Please enter valid column names."
        return
    fi
done

    for col in "${selected_columns[@]}"; do
        printf "%s|" "$col"
    done
    echo ""

    indices=()
    for col in "${selected_columns[@]}"; do
        indices+=( $(awk -F'|' -v col="$col" 'NR==1 {for (i=1; i<=NF; i++) if ($i == col) print i}' "$insert_table_name") )
    done

    awk -F'|' -v OFS='|' -v indices="${indices[*]}" '
        BEGIN {
            split(indices, cols, " ");
        }
        NR > 3 {
            for (i in cols) {
                printf "%s%s", $cols[i], (i == length(cols)) ? "" : OFS
            }
            print ""
        }
    ' "$insert_table_name"
}


    PS3="Select an operation: "
    options=("Select All" "Select by Primary Key" "Select by Column" "Quit")

    select choice in "${options[@]}"; do
        case $choice in
            "Select All")
                select_all
		break
                ;;
            "Select by Primary Key")
                select_by_primary_key
		break
                ;;
            "Select by Column")
                select_by_column
		break
                ;;
            "Quit")
                echo "
Quitting...
"
                break 2
                ;;
            *) echo "Invalid option
";;
        esac
    done
done
